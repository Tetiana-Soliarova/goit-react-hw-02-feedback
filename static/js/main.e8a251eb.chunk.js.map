{"version":3,"sources":["component/styles.module.css","component/Notification/notification.module.css","component/Statistics/statistic.module.css","component/Section/index.jsx","component/FeedbackOptions/index.jsx","component/Statistics/index.jsx","component/Notification/index.jsx","component/ComponentWithState.js","App.js","reportWebVitals.js","index.js","component/FeedbackOptions/styles.module.css"],"names":["module","exports","Section","title","children","defaultProp","FeedbackOptions","options","onLeaveFeedback","good","neutral","bad","type","name","className","styles","button","onClick","propType","PropTypes","number","isRequired","func","Statistics","total","feedback","list","statistic","Notification","message","ComponentWithState","state","increase","setState","prevState","countTotalFeedback","Object","values","reduce","acc","value","countPositiveFeedbackPercentage","positiveFeetback","toFixed","this","positivePercentage","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e8a251eb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"styles_title__3LZ_m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"notification_message__VL1JG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"statistic_list__3G2Lw\",\"statistic\":\"statistic_statistic__3Stzo\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section>\r\n      {title && <h1>{title}</h1>}\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.defaultProp = {\r\n  title: '',\r\n  \r\n};\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport styles from \"./styles.module.css\";\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  const { good, neutral, bad } = options;\r\n  return (\r\n    <div>\r\n      <button\r\n        type=\"button\"\r\n        name={good}\r\n        className={styles.button}\r\n        onClick={() => onLeaveFeedback(\"good\")}\r\n      >\r\n        Good\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        name={neutral}\r\n        className={styles.button}\r\n        onClick={() => onLeaveFeedback(\"neutral\")}\r\n      >\r\n        Neutral\r\n      </button>\r\n      <button\r\n        name={bad}\r\n        type=\"button\"\r\n        className={styles.button}\r\n        onClick={() => onLeaveFeedback(\"bad\")}\r\n      >\r\n        Bad\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propType = {\r\n  options: PropTypes.number.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\n\r\nexport default FeedbackOptions;\r\n\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./statistic.module.css\";\r\n\r\nconst Statistics = ({ good, bad, neutral, total, feedback }) => {\r\n  return (\r\n    <div>\r\n      \r\n\r\n      <ul className={styles.list}>\r\n        <li>\r\n          <span className={styles.statistic}>Good: {good}</span>\r\n        </li>\r\n        <li>\r\n          <span className={styles.statistic}>Neutral: {neutral}</span>\r\n        </li>\r\n        <li>\r\n          <span className={styles.statistic}>Bad: {bad} </span>\r\n        </li>\r\n        <li>\r\n          <span className={styles.statistic}> Total: {total}</span>\r\n        </li>\r\n        <li>\r\n          <span className={styles.statistic}>\r\n            {\" \"}\r\n            Positive feedback: {feedback} %\r\n          </span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}; \r\n\r\n\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  feedback: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './notification.module.css'\r\n\r\nconst Notification = ({ message }) => {\r\n  return (\r\n    <div>\r\n          <p className={styles.message}>{message}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nNotification.defaultProp = {\r\n  message: '',\r\n};\r\nNotification.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\n\r\nexport default Notification;","import { Component } from 'react'\r\nimport styles from './styles.module.css'\r\nimport FeedbackOptions from './FeedbackOptions'\r\nimport Statistics from './Statistics'\r\nimport Notification from './Notification'\r\n\r\nclass ComponentWithState extends Component {\r\n  static defaultProp = {\r\n    total: 0,\r\n  }\r\n\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  }\r\n\r\n  increase = (options) => {\r\n    this.setState((prevState) => {\r\n      return {\r\n        [options]: prevState[options] + 1,\r\n      }\r\n    })\r\n  }\r\n\r\n  countTotalFeedback = () => {\r\n    return Object.values(this.state).reduce((acc, value) => acc + value, 0)\r\n  }\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    const positiveFeetback = +(\r\n      (this.state.good / this.countTotalFeedback()) *\r\n      100\r\n    ).toFixed()\r\n    return positiveFeetback > 0 ? positiveFeetback : 0\r\n  }\r\n\r\n  render() {\r\n    let total = this.countTotalFeedback()\r\n    let positivePercentage = this.countPositiveFeedbackPercentage()\r\n\r\n    \r\n    return (\r\n      <>\r\n        <FeedbackOptions options={this.state} onLeaveFeedback={this.increase} />\r\n        <h2 className={styles.title}>Statistics</h2>\r\n\r\n        {total > 0 ? (\r\n          <Statistics\r\n            good={this.state.good}\r\n            neutral={this.state.neutral}\r\n            bad={this.state.bad}\r\n            total={total}\r\n            feedback={positivePercentage}\r\n          />\r\n        ) : (\r\n          <Notification message=\"No feedback given\" />\r\n        )}\r\n      </>\r\n    )\r\n  }\r\n}\r\nexport default ComponentWithState\r\n","import React from 'react'\nimport Section from './component/Section'\nimport ComponentWithState from './component/ComponentWithState'\n\n\nexport default App\nfunction App() {\n  return (\n    <div>\n      <Section title=\"Please leave feedback\">\n        <ComponentWithState />\n      </Section>\n    </div>\n  )\n}\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"styles_button__1c7jE\"};"],"sourceRoot":""}